#include <bits/stdc++.h>
using namespace std;
typedef long long ll;


ll getAns(ll n, ll m){
    ll i, j, ans = 0;
    cout << "-----------------------------------------------\n";
    for(i = 1; i < n; i ++){
        for(j = i + 1; j <= n; j ++){
            if( ((m%i)%j) == ((m%j)%i) ){
                cout << i << " " << j << "\n";
                ans ++;
            }
        }
    }
    cout << "-----------------------------------------------\n";

    return ans;
}


int main(){
    // ios_base::sync_with_stdio(false);
    // cin.tie(NULL);

    ll cases, n, m, len;
    
    cout << "cases : ";
    cin >> cases;
    
    while (cases --){
        cin >> n >> m;
        cout << getAns(n, m) << "\n";
    }

    // for(i = 1; i < n; i ++){
    //     ans += int(n/i);
    // }

}


// 60 60 --------> 254

// 2 -> 1
// 3 -> 1 2
// 4 -> 1 2 3
// 5 -> 1 2 3 4
// 6 -> 1 2 3 4 5
// 7 -> 1 2 4
// 8 -> 1 2 4 7
// 9 -> 1 2 3 6
// 10 -> 1 2 3 4 5 6
// 11 -> 1 5
// 12 -> 1 2 3 4 5 6 10
// 13 -> 1 2 4
// 14 -> 1 2 4 7 8
// 15 -> 1 2 3 4 5 6 10 12
// 16 -> 1 2 3 4 6 8 12
// 17 -> 1 3
// 18 -> 1 2 3 6 9
// 19 -> 1 3
// 20 -> 1 2 3 4 5 6 10 12 15
// 21 -> 1 2 3 6 7 14 
// 22 -> 1 2 4 11
// 23 -> 1 2
// 24 -> 1 2 3 4 6 8 12 16
// 25 -> 1 2 5 10
// 26 -> 1 2 4 13
// 27 -> 1 2 3 6 9 18
// 28 -> 1 2 4 7 8 14
// 29 -> 1 2
// 30 -> 1 2 3 4 5 6 10 12 15 20
// 31 -> 1
// 32 -> 1 2 4 8 16
// 33 -> 1 3 11
// 34 -> 1 2 17
// 35 -> 1 5 7 
// 36 -> 1 2 3 4 6 9 12 18
// 37 -> 1
// 38 -> 1 2 19
// 39 -> 1 3 13
// 40 -> 1 2 4 5 8 10 20
// 41 -> 1
// 42 -> 1 2 3 6 7 14 21
// 43 -> 1
// 44 -> 1 2 4 11 22
// 45 -> 1 3 5 9 15
// 46 -> 1 2 23
// 47 -> 1
// 48 -> 1 2 3 4 6 8 12 16 24 
// 49 -> 1 7
// 50 -> 1 2 5 10 25
// 51 -> 1 3 17
// 52 -> 1 2 4 13 26
// 53 -> 1
// 54 -> 1 2 3 6 9 18 27
// 55 -> 1 5 11
// 56 -> 1 2 4 7 8 14 28
// 57 -> 1 3 19
// 58 -> 1 2 29
// 59 -> 1
// 60 -> 1 2 3 4 5 6 10 12 15 20 30


// 35 37 -----> 124

// 2 1
// 3 1 2
// 4 1 2 3
// 5 1
// 6 1 2 3 4
// 7 1 5
// 8 1 2 4
// 9 1 2 3 4 6
// 10 1 2 3 5 6
// 11 1 3
// 12 1 2 3 4 6 9
// 13 1 2
// 14 1 2 4 7
// 15 1 2 3 5 6 10
// 16 1 2 4 8
// 17 1 2
// 18 1 2 3 4 6 9 12
// 19 1
// 20 1 2 4 5 10
// 21 1 3 7
// 22 1 2 11
// 23 1
// 24 1 2 3 4 6 8 12
// 25 1 5
// 26 1 2 13
// 27 1 3 9
// 28 1 2 4 7 14 
// 29 1
// 30 1 2 3 5 6 10 15
// 31 1
// 32 1 2 4 8 16
// 33 1 3 11
// 34 1 2 17
// 35 1 5 7
// 36 1 2 3 4 6 9 12 18
// 37 1

// 45 45 --------------> 161

// 2 1
// 3 1
// 4 1 2
// 5 1 3
// 6 1 2 3
// 7 1 2 3 6
// 8 1 2 4 5
// 9 1 3 5
// 10 1 2 4 5 8
// 11 1 2 4
// 12 1 2 3 4 6 9
// 13 1 3
// 14 1 2 3 6 7
// 15 1 3 5 9
// 16 1 2 4 8
// 17 1 2
// 18 1 2 3 4 6 9 12
// 19 1 2
// 20 1 2 4 5 8 10
// 21 1 2 3 6 7 14
// 22 1 2 4 11
// 23 1
// 24 1 2 3 4 6 8 12 
// 25 1 5
// 26 1 2 13
// 27 1 3 9
// 28 1 2 4 7 14
// 29 1
// 30 1 2 3 5 6 10 15
// 31 1
// 32 1 2 4 8 16
// 33 1 3 11
// 34 1 2 17
// 35 1 5 7
// 36 1 2 3 4 6 9 12 18
// 37 1
// 38 1 2 19
// 39 1 3 13
// 40 1 2 4 5 8 10 20 
// 41 1
// 42 1 2 3 6 7 14 21
// 43 1
// 44 1 2 4 11 22
// 45 1 3 5 9 15


// 30 30 ----------> 98

// 2 -> 1
// 3 -> 1 2
// 4 -> 1 2
// 5 -> 1 2 3
// 6 -> 1 2 3 5
// 7 -> 1 2 4
// 8 -> 1 2 3 4 6
// 9 -> 1 3
// 10 -> 1 2 3 5 6
// 11 -> 1 2
// 12 -> 1 2 3 4 6 8
// 13 -> 1 2 
// 14 -> 1 2 4 7
// 15 -> 1 2 3 5 6 10
// 16 -> 1 2 4 8
// 17 -> 1
// 18 -> 1 2 3 6 9
// 19 -> 1
// 20 -> 1 2 4 5 10
// 21 -> 1 3 7
// 22 -> 1 2 11
// 23 -> 1
// 24 -> 1 2 3 4 6 8 12
// 25 -> 1 5
// 26 -> 1 2 13
// 27 -> 1 3 9
// 28 -> 1 2 4 7 14
// 29 -> 1 
// 30 -> 1 2 3 5 6 10 15



// 15 30 _------------------> 47

// 2 -> 1
// 3 -> 1 2
// 4 -> 1 2
// 5 -> 1 2 3
// 6 -> 1 2 3 5
// 7 -> 1 2 4
// 8 -> 1 2 3 4 6
// 9 -> 1 3
// 10 -> 1 2 3 5 6
// 11 -> 1 2
// 12 -> 1 2 3 4 6 8
// 13 -> 1 2
// 14 -> 1 2 4 7
// 15 -> 1 2 3 5 6 10



// (12) 0 -> 1 2 3 4 5 6 10 12 15 20 30 60 
// (1) 1 -> 59
// (2) 2 -> 29 58
// (2) 3 -> 19 57
// (5) 4 -> 7 8 14 28 56
// (2) 5 -> 11 55
// (4) 6 -> 9 18 27 54
// (1) 7 -> 53
// (3) 8 -> 13 26 52
// (2) 9 -> 17 51 
// (2) 10 -> 25 50
// (1) 11 -> 49
// (3) 12 -> 16 24 48
// (1) 13 -> 47
// (2) 14 -> 23 46
// (1) 15 -> 45
// (2) 16 -> 22 44
// (1) 17 -> 43
// (2) 18 -> 21 42
// (1) 19 -> 41
// (1) 20 -> 40 
// (1) 21 -> 39
// (1) 22 -> 38
// (1) 23 -> 37
// (1) 24 -> 36
// (1) 25 -> 35
// (1) 26 -> 34
// (1) 27 -> 33
// (1) 28 -> 32
// (1) 29 -> 31
// (0) 30 ->

